{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"appBook\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BookForm = _resolveComponent(\"BookForm\");\n  const _component_BookList = _resolveComponent(\"BookList\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"Formulário para adicionar ou editar um livro\"), _createVNode(_component_BookForm, {\n    bookToEdit: $data.bookToEdit,\n    onBookAdded: $options.fetchBooks,\n    onBookUpdated: $options.fetchBooks\n  }, null, 8 /* PROPS */, [\"bookToEdit\", \"onBookAdded\", \"onBookUpdated\"]), _createCommentVNode(\"Lista de livros\"), _createVNode(_component_BookList, {\n    onEditBook: $options.setBookToEdit,\n    ref: \"bookList\"\n  }, null, 8 /* PROPS */, [\"onEditBook\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_BookForm","bookToEdit","$data","onBookAdded","$options","fetchBooks","onBookUpdated","_component_BookList","onEditBook","setBookToEdit","ref"],"sources":["C:\\Users\\dsadm\\Pictures\\@SITEBiblioteca\\frontend\\loginfrontend\\src\\AppBook.vue"],"sourcesContent":["<template>\r\n  <div id=\"appBook\">\r\n<!--Formulário para adicionar ou editar um livro-->\r\n<BookForm :bookToEdit=\"bookToEdit\" @book-added=\"fetchBooks\" @book-updated=\"fetchBooks\" />\r\n<!--Lista de livros-->\r\n<BookList @edit-book=\"setBookToEdit\" ref=\"bookList\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BookList from './components/BookList.vue'\r\nimport BookForm from './components/BookForm.vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bookToEdit: null,\r\n    }\r\n  },\r\n  components:{\r\n    BookList,\r\n    BookForm,\r\n  },\r\n  methods: {\r\n    //Função para definir o livro que será editado\r\n    setBookToEdit(book){\r\n      this.bookToEdit = book\r\n    },\r\n    //Função para atualizar a lista de livros após adicionar ou editar\r\n    fetchBooks(){\r\n      this.$refs.bookList.fetchBooks();\r\n      this.bookToEdit = null; //Limpa o formulário após a ação\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAS;;;;uBAAjBC,mBAAA,CAKM,OALNC,UAKM,GAJRC,mBAAA,gDAAmD,EACnDC,YAAA,CAAyFC,mBAAA;IAA9EC,UAAU,EAAEC,KAAA,CAAAD,UAAU;IAAGE,WAAU,EAAEC,QAAA,CAAAC,UAAU;IAAGC,aAAY,EAAEF,QAAA,CAAAC;2EAC3EP,mBAAA,mBAAsB,EACtBC,YAAA,CAAsDQ,mBAAA;IAA3CC,UAAS,EAAEJ,QAAA,CAAAK,aAAa;IAAEC,GAAG,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}