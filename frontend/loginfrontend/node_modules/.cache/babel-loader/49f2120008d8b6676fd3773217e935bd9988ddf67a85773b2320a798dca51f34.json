{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport api from '../services/api'; // Importa o serviço API para fazer requisições\n\nexport default {\n  props: ['bookToEdit'],\n  data() {\n    return {\n      book: this.bookToEdit || {\n        title: '',\n        author: '',\n        year: null,\n        isbn: '',\n        image: null,\n        editora: '',\n        sinopse: ''\n      },\n      selectedImage: null,\n      // Guardar a imagem selecionada\n      imagePreview: null // Guardar a URL da imagem para pré-visualização\n    };\n  },\n  watch: {\n    bookToEdit: {\n      immediate: true,\n      handler(newVal) {\n        this.book = newVal || {\n          title: '',\n          author: '',\n          year: null,\n          isbn: '',\n          image: null,\n          editora: '',\n          sinopse: ''\n        };\n        if (newVal && newVal.image) {\n          // Caso o livro tenha uma imagem, defina a URL da imagem\n          this.imagePreview = newVal.image;\n        }\n      }\n    }\n  },\n  methods: {\n    handleFileChange(event) {\n      // Armazena o arquivo da imagem selecionada\n      this.selectedImage = event.target.files[0];\n      // Cria a URL de pré-visualização da imagem\n      this.imagePreview = URL.createObjectURL(this.selectedImage);\n    },\n    // Função para enviar o formulário\n    handleSubmit() {\n      console.log(\"Conteúdo de selectedImage:\", this.selectedImage); // <-- ADICIONE AQUI\n      const formData = new FormData();\n      formData.append('title', this.book.title);\n      formData.append('author', this.book.author);\n      formData.append('year', this.book.year);\n      formData.append('isbn', this.book.isbn);\n      formData.append('editora', this.book.editora);\n      formData.append('sinopse', this.book.sinopse);\n      if (this.selectedImage) {\n        formData.append('image', this.selectedImage);\n      }\n      console.log(\"Dados enviados:\", Array.from(formData.entries()));\n      if (this.book._id) {\n        api.updateBook(this.book._id, formData).then(() => {\n          this.$emit('book-updated');\n          window.location.reload(); // Recarrega a página após a atualização\n        });\n      } else {\n        api.addBook(formData).then(() => {\n          this.$emit('book-added');\n          window.location.reload(); // Recarrega a página após a adição\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","props","data","book","bookToEdit","title","author","year","isbn","image","editora","sinopse","selectedImage","imagePreview","watch","immediate","handler","newVal","methods","handleFileChange","event","target","files","URL","createObjectURL","handleSubmit","console","log","formData","FormData","append","Array","from","entries","_id","updateBook","then","$emit","window","location","reload","addBook"],"sources":["C:\\Users\\PC\\Pictures\\-SITEBiblioteca\\frontend\\loginfrontend\\src\\components\\BookForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"handleSubmit\" enctype=\"multipart/form-data\">\r\n    <input v-model=\"book.title\" placeholder=\"Título\" required/>\r\n    <input v-model=\"book.author\" placeholder=\"Autor\" required/>\r\n    <input v-model=\"book.year\" placeholder=\"Ano\" required/>\r\n    <input v-model=\"book.isbn\" placeholder=\"ISBN\" required/>\r\n    \r\n    <!-- Campo para selecionar a imagem -->\r\n    <input type=\"file\" @change=\"handleFileChange\"/>\r\n\r\n    <!-- Exibe a imagem selecionada -->\r\n    <div v-if=\"selectedImage\">\r\n      <img :src=\"imagePreview\" alt=\"Imagem do livro\" style=\"max-width: 200px; margin-top: 10px;\" />\r\n    </div>\r\n\r\n    <!-- Exibe a imagem carregada do livro, se houver -->\r\n    <div v-else-if=\"book.image\">\r\n      <img :src=\"book.image\" alt=\"Imagem do livro\" style=\"max-width: 200px; margin-top: 10px;\" />\r\n    </div>\r\n\r\n    <input v-model=\"book.editora\" placeholder=\"Editora\" required/>\r\n    <input v-model=\"book.sinopse\" placeholder=\"Sinopse\" required/>\r\n\r\n    <button type=\"submit\">{{ book._id ? 'Atualizar' : 'Adicionar' }}</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport api from '../services/api'; // Importa o serviço API para fazer requisições\r\n\r\nexport default {\r\n  props: ['bookToEdit'],\r\n  data() {\r\n    return {\r\n      book: this.bookToEdit || { title: '', author: '', year: null, isbn: '', image: null, editora: '', sinopse: '' },\r\n      selectedImage: null, // Guardar a imagem selecionada\r\n      imagePreview: null, // Guardar a URL da imagem para pré-visualização\r\n    };\r\n  },\r\n  watch: {\r\n    bookToEdit: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        this.book = newVal || { title: '', author: '', year: null, isbn: '', image: null, editora: '', sinopse: '' };\r\n        if (newVal && newVal.image) {\r\n          // Caso o livro tenha uma imagem, defina a URL da imagem\r\n          this.imagePreview = newVal.image;\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    handleFileChange(event) {\r\n      // Armazena o arquivo da imagem selecionada\r\n      this.selectedImage = event.target.files[0];\r\n      // Cria a URL de pré-visualização da imagem\r\n      this.imagePreview = URL.createObjectURL(this.selectedImage);\r\n    },\r\n    // Função para enviar o formulário\r\n    handleSubmit() {\r\n      console.log(\"Conteúdo de selectedImage:\", this.selectedImage); // <-- ADICIONE AQUI\r\n      const formData = new FormData();\r\n      formData.append('title', this.book.title);\r\n      formData.append('author', this.book.author);\r\n      formData.append('year', this.book.year);\r\n      formData.append('isbn', this.book.isbn);\r\n      formData.append('editora', this.book.editora);\r\n      formData.append('sinopse', this.book.sinopse);\r\n\r\n      if (this.selectedImage) {\r\n        formData.append('image', this.selectedImage);\r\n      }\r\n\r\n      console.log(\"Dados enviados:\", Array.from(formData.entries()));\r\n\r\n      if (this.book._id) {\r\n        api.updateBook(this.book._id, formData).then(() => {\r\n          this.$emit('book-updated');\r\n          window.location.reload(); // Recarrega a página após a atualização\r\n        });\r\n      } else {\r\n        api.addBook(formData).then(() => {\r\n          this.$emit('book-added');\r\n          window.location.reload(); // Recarrega a página após a adição\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}