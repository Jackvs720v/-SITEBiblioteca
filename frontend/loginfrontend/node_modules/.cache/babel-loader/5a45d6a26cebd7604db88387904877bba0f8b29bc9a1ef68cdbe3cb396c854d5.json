{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.book.title = $event),\n    placeholder: \"Título\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.book.title]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.book.author = $event),\n    placeholder: \"Autor\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.book.author]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.book.year = $event),\n    placeholder: \"Ano\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.book.year]]), _createElementVNode(\"button\", _hoisted_1, _toDisplayString(_ctx.book._id ? 'Atualizar' : 'Adicionar'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["type","_createElementBlock","onSubmit","_cache","_withModifiers","args","_ctx","handleSubmit","_createElementVNode","$event","book","title","placeholder","required","author","year","_hoisted_1","_toDisplayString","_id"],"sources":["C:\\Users\\dsadm\\Pictures\\@SITEBiblioteca\\frontend\\loginfrontend\\src\\components\\BookForm.vue"],"sourcesContent":["<template>\r\n<form @submit.prevent=\"handleSubmit\">\r\n    <input v-model=\"book.title\" placeholder=\"Título\" required/>\r\n    <input v-model=\"book.author\" placeholder=\"Autor\" required/>\r\n    <input v-model=\"book.year\" placeholder=\"Ano\" required/>\r\n\r\n<button type=\"submit\">{{ book._id ? 'Atualizar' : 'Adicionar' }}</button>\r\n</form>\r\n</template>\r\n\r\n<script>\r\nimport api from '..\\'; //Importa o serviço API para fazer requisições\r\n\r\nexport default{\r\n\r\n    props: ['bookToEdit'],\r\n    data() {\r\n    return {\r\n        book: this.bookToEdit || { title: '', author: '', year: null } \r\n    };\r\n},\r\nwatch: {\r\n    bookToEdit: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        this.book = newVal || { title: '', author: '', year: null }; // Atualiza os dados quando a prop mudar\r\n      },\r\n    },\r\n  },\r\n    methods: {\r\n        //Função para enviar o formulário\r\n        handleSubmit(){\r\n            if (this.book._id) {\r\n            api.updateBook(this.book._id, this.book).then(()=>{\r\n                this.$emit('book-updated'); //Emite um evento quando o livro é atualizado\r\n            });    \r\n            } else {\r\n            api.addBook(this.book).then(()=>{\r\n              this.$emit('book-added'); //Emite um evento quando um novo livro é add\r\n            });\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>"],"mappings":";;EAMQA,IAAI,EAAC;AAAQ;;uBALrBC,mBAAA,CAMO;IANAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADbC,cAAA,KAAAC,IAAA,KACuBC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBAC/BG,mBAAA,CAA2D;IAF/D,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAEoBH,IAAA,CAAAI,IAAI,CAACC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC,QAAQ;IAACC,QAAQ,EAAR;iDAAjCP,IAAA,CAAAI,IAAI,CAACC,KAAK,E,mBAC1BH,mBAAA,CAA2D;IAH/D,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAGoBH,IAAA,CAAAI,IAAI,CAACI,MAAM,GAAAL,MAAA;IAAEG,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAjCP,IAAA,CAAAI,IAAI,CAACI,MAAM,E,mBAC3BN,mBAAA,CAAuD;IAJ3D,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIoBH,IAAA,CAAAI,IAAI,CAACK,IAAI,GAAAN,MAAA;IAAEG,WAAW,EAAC,KAAK;IAACC,QAAQ,EAAR;iDAA7BP,IAAA,CAAAI,IAAI,CAACK,IAAI,E,GAE7BP,mBAAA,CAAyE,UAAzEQ,UAAyE,EAAAC,gBAAA,CAAhDX,IAAA,CAAAI,IAAI,CAACQ,GAAG,6C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}