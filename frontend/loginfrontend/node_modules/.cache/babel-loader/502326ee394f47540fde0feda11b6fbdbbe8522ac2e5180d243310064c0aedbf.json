{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Login from '../views/Login.vue';\nimport Dashboard from '../views/Dashboard.vue';\nimport AppBook from '../views/AppBook.vue';\nconst routes = [{\n  path: '/login',\n  name: 'login',\n  component: Login\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/appbook',\n  name: 'appbook',\n  component: AppBook,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/:catchAll(.*)',\n  // Usando a nova sintaxe para rotas coringa\n  redirect: '/login'\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Proteção das rotas\nrouter.beforeEach((to, from, next) => {\n  const loggedIn = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Login","Dashboard","AppBook","routes","path","name","component","meta","requiresAuth","redirect","router","history","process","env","BASE_URL","beforeEach","to","from","next","loggedIn","localStorage","getItem","matched","some","record"],"sources":["C:/Users/dsadm.EDUC501/Pictures/@SITEBiblioteca/frontend/loginfrontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Login from '../views/Login.vue';\r\nimport Dashboard from '../views/Dashboard.vue';\r\nimport AppBook from '../views/AppBook.vue';\r\n \r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'login',\r\n    component: Login,\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'dashboard',\r\n    component: Dashboard,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: '/appbook',\r\n    name: 'appbook',\r\n    component: AppBook,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: '/:catchAll(.*)', // Usando a nova sintaxe para rotas coringa\r\n    redirect: '/login',\r\n  },\r\n];\r\n \r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n \r\n// Proteção das rotas\r\nrouter.beforeEach((to, from, next) => {\r\n  const loggedIn = localStorage.getItem('token');\r\n \r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next('/login');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n \r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEL,SAAS;EACpBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEJ,OAAO;EAClBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,gBAAgB;EAAE;EACxBK,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,CAACa,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE9C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACjB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACW,QAAQ,EAAE;IACpED,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}